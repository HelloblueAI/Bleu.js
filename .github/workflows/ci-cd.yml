name: Bleu.js CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.github/*.md'

permissions:
  contents: write

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  build-and-test:
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [backend, eggs-generator, core-engine]

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Lint ${{ matrix.component }}
        run: |
          if [ -f "${{ matrix.component }}/.eslintrc" ] || [ -f "${{ matrix.component }}/.eslintrc.js" ]; then
            pnpm run lint:${{ matrix.component }}
          fi

      - name: Build ${{ matrix.component }}
        run: |
          if [ -f "${{ matrix.component }}/package.json" ]; then
            cd ${{ matrix.component }}
            pnpm run build
          fi

      - name: Run tests for ${{ matrix.component }}
        run: |
          if [ -f "${{ matrix.component }}/package.json" ]; then
            cd ${{ matrix.component }}
            pnpm run test
          fi
        env:
          MONGODB_URI: mongodb://localhost:27017/test
          REDIS_URL: redis://localhost:6379

  integration-test:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run integration tests
        run: pnpm run test:integration

  performance:
    needs: integration-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run performance tests
        run: |
          pnpm run test:performance
          pnpm run benchmark

  security:
    needs: performance
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run security checks
        run: |
          pnpm audit
          pnpm run test:security

  version-check:
    needs: security
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Check version consistency
        run: |
          echo "CURRENT_VERSION=$(node -p 'require("./package.json").version')" >> $GITHUB_ENV
          if [ -f "core-engine/package.json" ]; then
            echo "ENGINE_VERSION=$(node -p 'require("./core-engine/package.json").version')" >> $GITHUB_ENV
            if [ "$CURRENT_VERSION" != "$ENGINE_VERSION" ]; then
              echo "Version mismatch between root and core-engine"
              exit 1
            fi
          fi
