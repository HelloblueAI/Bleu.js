name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black isort flake8 mypy bandit
        pip install tensorflow

    - name: Run tests with coverage
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy bandit

    - name: Run black
      run: black . --check

    - name: Run isort
      run: isort . --check-only

    - name: Run flake8
      run: flake8 .

    - name: Run mypy
      run: mypy .

    - name: Run bandit
      run: bandit -r .

  deploy:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to AWS
      run: |
        aws cloudformation deploy \
          --template-file deploy/aws/infrastructure.yml \
          --stack-name bleujs-infrastructure \
          --capabilities CAPABILITY_IAM

    - name: Deploy API
      run: |
        aws cloudformation deploy \
          --template-file deploy/aws/subscriptions.yml \
          --stack-name bleujs-subscriptions \
          --capabilities CAPABILITY_IAM

    - name: Deploy Lambda
      run: |
        aws cloudformation deploy \
          --template-file deploy/aws/subscription_lambda.yml \
          --stack-name bleujs-lambda \
          --capabilities CAPABILITY_IAM
