name: Publish to PyPI

on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish Package to PyPI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step 3: Install dependencies for building and publishing the package
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      # Step 4: Build the Python package
      - name: Build package
        run: python -m build

      # Step 5: Publish the package to PyPI
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__  # Standard username for API token authentication
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}  # Securely retrieve API token
        run: python -m twine upload dist/*

      # Optional: Clean up artifacts (if required)
      - name: Cleanup build artifacts
        if: success()
        run: rm -rf dist/ build/ *.egg-info
