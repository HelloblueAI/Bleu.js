[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "bleujs"
version = "1.1.3"
description = "A state-of-the-art quantum-enhanced vision system with advanced AI capabilities"
authors = ["Helloblue, Inc. <support@helloblue.ai>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/HelloblueAI/Bleu.js"
repository = "https://github.com/HelloblueAI/Bleu.js.git"
documentation = "https://docs.bleujs.org"
packages = [
    { include = "bleujs", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.9"
numpy = ">=1.23.5"
torch = ">=2.0.0"
torchvision = ">=0.15.0"
tensorflow = ">=2.15.0"
opencv-python = ">=4.8.0"
Pillow = ">=10.0.0"
scikit-learn = ">=1.3.0"
pandas = ">=2.0.0"
matplotlib = ">=3.7.0"
seaborn = ">=0.12.0"
tqdm = ">=4.65.0"
requests = ">=2.31.0"
python-dotenv = ">=1.0.0"
fastapi = ">=0.100.0"
uvicorn = ">=0.22.0"
pydantic = ">=2.0.0"
python-multipart = ">=0.0.6"
aiofiles = ">=23.1.0"
prometheus-client = ">=0.17.0"
structlog = ">=23.1.0"
cryptography = ">=41.0.0"
python-jose = {extras = ["cryptography"], version = ">=3.3.0"}
passlib = {extras = ["bcrypt"], version = ">=1.7.4"}
transformers = ">=4.30.0"
GPUtil = ">=1.4.0"
psutil = ">=5.9.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.3.1"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.1.0"
black = ">=23.3.0"
isort = ">=5.12.0"
flake8 = ">=6.1.0"
mypy = ">=1.3.0"
pre-commit = ">=3.3.2"
sphinx = ">=7.0.0"
sphinx-rtd-theme = ">=1.3.0"
sphinx-autodoc-typehints = ">=1.24.0"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=src --cov-report=term-missing"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
] 