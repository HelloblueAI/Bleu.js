{
  "name": "bleujs",
  "version": "1.1.3",
  "description": "A powerful AI-powered framework for Decision Trees, Deep Learning, and Model Deployment, with AWS Lambda API support",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/types/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/types/index.d.ts",
      "import": "./dist/index.js",
      "require": "./dist/index.cjs"
    },
    "./ai": {
      "types": "./dist/types/ai/index.d.ts",
      "import": "./dist/ai/index.js",
      "require": "./dist/ai/index.cjs"
    },
    "./quantum": {
      "types": "./dist/types/quantum/index.d.ts",
      "import": "./dist/quantum/index.js",
      "require": "./dist/quantum/index.cjs"
    },
    "./security": {
      "types": "./dist/types/security/index.d.ts",
      "import": "./dist/security/index.js",
      "require": "./dist/security/index.cjs"
    },
    "./performance": {
      "types": "./dist/types/performance/index.d.ts",
      "import": "./dist/performance/index.js",
      "require": "./dist/performance/index.cjs"
    },
    "./cluster": {
      "types": "./dist/types/cluster/index.d.ts",
      "import": "./dist/cluster/index.js",
      "require": "./dist/cluster/index.cjs"
    },
    "./wasm": {
      "types": "./dist/types/wasm/index.d.ts",
      "import": "./dist/wasm/index.js",
      "require": "./dist/wasm/index.cjs"
    },
    "./rust": {
      "types": "./dist/types/rust/index.d.ts",
      "import": "./dist/rust/index.js",
      "require": "./dist/rust/index.cjs"
    },
    "./lambda": {
      "types": "./dist/types/lambda/index.d.ts",
      "import": "./dist/lambda/index.js",
      "require": "./dist/lambda/index.cjs"
    }
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE.md",
    "lambda"
  ],
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "start": "node src/backend/server.mjs",
    "start:dev": "nodemon src/backend/server.mjs",
    "start:frontend": "pnpm dlx http-server -p 4002 ./frontend/public",
    "start:backend": "node src/backend/server.js",
    "start:core-engine": "node core-engine/index.js",
    "start:eggs-generator": "node eggs-generator/src/index.js",
    "start:dependency-management": "node dependency-management/src/index.js",
    "build": "bun build ./src/index.ts --outdir ./dist",
    "build:watch": "bun build ./src/index.ts --outdir ./dist --watch",
    "build:prod": "bun build ./src/index.ts --outdir ./dist --minify",
    "build:wasm": "wasm-pack build --target web --release",
    "build:rust": "cargo build --release",
    "build:ts": "bun build src --outdir dist --target node",
    "build:rollup": "rollup -c rollup.config.prod.js",
    "deploy:lambda": "npm run build:lambda && aws lambda update-function-code --function-name bleujs-api --zip-file fileb://lambda/dist/function.zip",
    "dev": "pnpm run start:dev",
    "test": "NODE_ENV=test jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --coverage",
    "test:coverage": "NODE_ENV=test jest --config jest.config.ts --coverage --detectOpenHandles --forceExit --runInBand --coverageThreshold='{\"global\":{\"branches\":80,\"functions\":80,\"lines\":80,\"statements\":80}}'",
    "test:watch": "jest --config jest.config.ts --watch --coverage",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --config jest.config.ts --runInBand --coverage",
    "test:update": "jest --config jest.config.ts -u --coverage",
    "test:clear": "jest --config jest.config.ts --clearCache",
    "test:quantum": "jest --config jest.config.ts src/ai/multimodal/enhancers/__tests__/quantum.test.ts --coverage",
    "test:performance": "NODE_ENV=test jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --testPathPattern=performance --coverage",
    "test:security": "NODE_ENV=test jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --testPathPattern=security --coverage",
    "test:integration": "NODE_ENV=test jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --testPathPattern=integration --coverage",
    "test:unit": "NODE_ENV=test jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --testPathPattern=unit --coverage",
    "test:report": "jest --config jest.config.ts --coverage --coverageReporters=text-lcov > coverage.lcov && cat coverage/lcov-report/index.html",
    "test:parallel": "NODE_ENV=test jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --maxWorkers=100% --coverage",
    "test:sequential": "NODE_ENV=test jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --maxWorkers=1 --coverage",
    "test:memory": "NODE_ENV=test node --expose-gc node_modules/.bin/jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --coverage",
    "test:stress": "NODE_ENV=test jest --config jest.config.ts --detectOpenHandles --forceExit --runInBand --coverage --testTimeout=60000 --maxWorkers=1",
    "test:cleanup": "rimraf coverage .jest-cache",
    "test:precommit": "jest --config jest.config.ts --bail --findRelatedTests --passWithNoTests --coverage",
    "test:validate": "jest --config jest.config.ts --validateSnapshot --coverage",
    "test:analyze": "jest --config jest.config.ts --coverage --coverageReporters=text-lcov > coverage.lcov && sonar-scanner",
    "lint": "eslint . --fix",
    "lint:ci": "eslint . --max-warnings=0",
    "lint:frontend": "eslint frontend/**/*.{js,vue}",
    "lint:staged": "lint-staged",
    "release": "standard-version",
    "prettier:fix": "prettier --write .",
    "prettier:check": "prettier --check .",
    "ci:lint": "eslint . --max-warnings=0",
    "ci:test": "pnpm run test:all",
    "ci:build": "pnpm run build",
    "ci:deploy": "echo 'Deploying...'",
    "ci:report": "jest --coverage --coverageReporters=text-lcov > coverage.lcov",
    "prepublishOnly": "pnpm run build",
    "format": "prettier --write .",
    "analyze": "sonar-scanner",
    "clean": "rimraf dist",
    "prepare": "husky"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,mjs}": [
      "eslint --fix",
      "prettier --write",
      "jest --bail --findRelatedTests --passWithNoTests"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@aws-sdk/client-dynamodb": "^3.0.0",
    "@aws-sdk/client-lambda": "^3.0.0",
    "@aws-sdk/lib-dynamodb": "^3.0.0",
    "@huggingface/inference": "^2.8.1",
    "@tensorflow/tfjs": "^4.22.0",
    "@tensorflow/tfjs-node": "^4.22.0",
    "@wasmer/wasi": "^0.12.0",
    "@wasmer/wasmfs": "^0.12.0",
    "async_hooks": "^1.0.0",
    "axios": "^1.8.1",
    "body-parser": "^1.20.3",
    "braces": "3.0.3",
    "compression": "^1.8.0",
    "cors": "^2.8.5",
    "decision-tree": "^0.3.7",
    "dotenv": "^16.4.7",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "get-port": "^7.1.0",
    "helmet": "^8.0.0",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "micromatch": "4.0.8",
    "mime": "4.0.6",
    "mongodb-memory-server": "10.1.4",
    "mongoose": "^8.12.0",
    "morgan": "^1.10.0",
    "multer": "1.4.5-lts.1",
    "node-fetch": "^3.3.2",
    "openai": "^4.86.1",
    "prom-client": "^15.1.0",
    "stripe": "^12.0.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "tough-cookie": "5.1.2",
    "uuid": "^11.1.0",
    "vue": "^3.5.13",
    "winston": "^3.17.0",
    "ws": "^8.18.1",
    "yargs-parser": "^21.1.1"
  },
  "devDependencies": {
    "@aws-sdk/client-s3": "^3.775.0",
    "@babel/cli": "^7.26.4",
    "@babel/core": "^7.26.10",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-decorators": "^7.25.9",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/plugin-proposal-optional-chaining": "^7.21.0",
    "@babel/plugin-transform-class-properties": "^7.25.9",
    "@babel/plugin-transform-modules-commonjs": "^7.26.3",
    "@babel/plugin-transform-object-rest-spread": "^7.25.9",
    "@babel/plugin-transform-runtime": "^7.26.9",
    "@babel/plugin-transform-typescript": "^7.27.0",
    "@babel/preset-env": "^7.26.9",
    "@babel/preset-react": "^7.26.3",
    "@babel/preset-typescript": "^7.26.0",
    "@babel/runtime": "^7.27.0",
    "@babel/runtime-corejs3": "^7.26.9",
    "@commitlint/cli": "^19.7.1",
    "@commitlint/config-conventional": "^19.7.1",
    "@jest/core": "29.7.0",
    "@jest/types": "^29.6.3",
    "@rollup/plugin-commonjs": "^25.0.0",
    "@rollup/plugin-json": "^6.0.0",
    "@rollup/plugin-node-resolve": "^15.0.0",
    "@rollup/plugin-terser": "^0.4.4",
    "@swc/core": "^1.11.13",
    "@swc/jest": "^0.2.37",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/aws-lambda": "^8.10.0",
    "@types/dotenv": "^8.2.3",
    "@types/express": "^5.0.0",
    "@types/jest": "29.5.12",
    "@types/node": "^22.13.9",
    "babel-jest": "^29.7.0",
    "babel-plugin-module-resolver": "^5.0.2",
    "babel-plugin-transform-typescript-metadata": "^0.3.2",
    "cross-env": "^7.0.3",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.0.2",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jest": "28.11.0",
    "eslint-plugin-json": "^4.0.1",
    "eslint-plugin-vue": "^9.32.0",
    "events": "^3.3.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-environment-node": "29.7.0",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "jest-runner-eslint": "^2.2.1",
    "jest-ts-webcompat-resolver": "^1.0.0",
    "jest-watch-suspend": "^1.1.2",
    "jest-watch-typeahead": "^2.2.2",
    "jsonc-eslint-parser": "^2.4.0",
    "lint-staged": "^15.4.3",
    "mongodb-memory-server-core": "^10.1.4",
    "nodemon": "^3.1.9",
    "prettier": "^3.5.3",
    "rimraf": "^6.0.1",
    "rollup": "^3.0.0",
    "rollup-plugin-typescript2": "^0.31.0",
    "sonar-scanner": "^3.1.0",
    "supertest": "^7.1.0",
    "ts-jest": "^29.3.0",
    "typescript": "^5.8.2",
    "vitest": "^3.0.7",
    "wasm-pack": "^0.12.1"
  },
  "resolutions": {
    "vue": "^3.4.30",
    "babel-jest": "^29.7.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.2.5"
  },
  "peerDependencies": {
    "mongodb": "^6.7.0",
    "node": ">=16.0.0"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/HelloblueAI/Bleu.js.git"
  },
  "keywords": [
    "ai",
    "decision-tree",
    "express",
    "mongodb",
    "deep-learning",
    "model-deployment",
    "data-science",
    "machine-learning",
    "aws-lambda",
    "serverless",
    "api",
    "quantum-computing",
    "security",
    "performance",
    "webassembly",
    "wasm",
    "rust"
  ],
  "author": {
    "name": "HB-NLP Research Lab",
    "url": "https://github.com/HelloblueAI"
  },
  "bugs": {
    "url": "https://github.com/HelloblueAI/Bleu.js/issues"
  },
  "homepage": "https://github.com/HelloblueAI/Bleu.js#readme",
  "eslintConfig": {
    "ignorePatterns": [
      "**/dist/**"
    ]
  },
  "pnpm": {
    "overrides": {
      "send": "0.18.0",
      "mime": "3.0.0",
      "serve-static": "1.15.0",
      "yaml": "^2.7.0"
    },
    "onlyBuiltDependencies": [
      "@scarf/scarf",
      "bcrypt",
      "es5-ext",
      "esbuild",
      "mongodb-memory-server",
      "sonar-scanner"
    ]
  },
  "jest": {
    "preset": "ts-jest/presets/default-esm",
    "testEnvironment": "node",
    "extensionsToTreatAsEsm": [
      ".ts",
      ".tsx"
    ],
    "moduleNameMapper": {
      "^(\\.{1,2}/.*)\\.js$": "$1",
      "^(\\.{1,2}/.*)\\.mjs$": "$1"
    },
    "transform": {
      "^.+\\.tsx?$": [
        "ts-jest",
        {
          "useESM": true
        }
      ],
      "^.+\\.mjs$": [
        "babel-jest",
        {
          "presets": [
            "@babel/preset-env"
          ]
        }
      ]
    },
    "testMatch": [
      "**/__tests__/**/*.test.[jt]s?(x)",
      "**/?(*.)+(spec|test).[jt]s?(x)"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/jest.setup.mjs"
    ],
    "transformIgnorePatterns": [
      "node_modules/(?!@babel/runtime)"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node",
      "mjs"
    ],
    "testEnvironmentOptions": {
      "url": "http://localhost"
    },
    "maxWorkers": 4,
    "verbose": true
  }
}
