networks:
  bleujs-network:
    driver: bridge

volumes:
  mongo-data:
  frontend-build:
  backend-logs:
  eggs-generator-data:
  core-engine-logs:
  nginx-logs:

services:
  # ðŸš€ MongoDB Database
  mongo:
    image: mongo:6.0
    restart: unless-stopped
    container_name: bleujs-mongo
    networks:
      - bleujs-network
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: bleujs
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: ["mongod", "--auth", "--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping').ok"]
      interval: 5s
      timeout: 3s
      retries: 3

  # ðŸ›  MongoDB Express Admin Panel
  mongo-express:
    image: mongo-express
    restart: unless-stopped
    container_name: bleujs-mongo-express
    networks:
      - bleujs-network
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH: false  
    depends_on:
      mongo:
        condition: service_healthy
    read_only: true

  # ðŸ”¥ Bleu.js AI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: bleujs-backend
    networks:
      - bleujs-network
    ports:
      - "5001:4003"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://${MONGO_USER}:${MONGO_PASS}@mongo:27017/bleujs?authSource=admin
      MEMORY_LIMIT: 1024
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - backend-logs:/usr/src/app/logs
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:4003 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    read_only: true
    security_opt:
      - "no-new-privileges:true"

  # âš¡ Eggs-Generator AI Service
  eggs-generator:
    build:
      context: ./eggs-generator
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: bleujs-eggs-generator
    networks:
      - bleujs-network
    ports:
      - "6000:6000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://${MONGO_USER}:${MONGO_PASS}@mongo:27017/eggsdb?authSource=admin
    volumes:
      - eggs-generator-data:/usr/src/app/data
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:6000 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    read_only: true
    security_opt:
      - "no-new-privileges:true"

  # ðŸ§  Core Engine (AI & NLP)
  core-engine:
    build:
      context: ./core-engine
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: bleujs-core-engine
    networks:
      - bleujs-network
    ports:
      - "7000:7000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - core-engine-logs:/usr/src/app/logs
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: "2.0"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:7000 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    read_only: true
    security_opt:
      - "no-new-privileges:true"

  # âš¡ Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: bleujs-frontend
    networks:
      - bleujs-network
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - frontend-build:/usr/src/app
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3000 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    read_only: true
    security_opt:
      - "no-new-privileges:true"

  # âš¡ Load Balancer (Reverse Proxy for Scale)
  nginx:
    image: nginx:latest
    container_name: bleujs-nginx
    restart: unless-stopped
    networks:
      - bleujs-network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost || exit 1"]

      interval: 5s
      timeout: 3s
      retries: 3
    read_only: true
    security_opt:
      - "no-new-privileges:true"


