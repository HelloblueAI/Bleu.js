Resources:
  AWSEBServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticbeanstalk.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkEnhancedHealth
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy
      Path: /
      RoleName: aws-elasticbeanstalk-service-role

  AWSEBInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: AWSEBInstanceRole

  AWSEBInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkEnhancedHealth
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Path: /
      RoleName: aws-elasticbeanstalk-ec2-role

  AWSEBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Elastic Beanstalk environment
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref AWSEBVPC
      Tags:
        - Key: Name
          Value: !Sub ${AWSEBEnvironmentName}-sg

  AWSEBVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${AWSEBEnvironmentName}-vpc

  AWSEBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AWSEBVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  AWSEBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AWSEBVPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true

  AWSEBInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWSEBEnvironmentName}-igw

  AWSEBInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref AWSEBVPC
      InternetGatewayId: !Ref AWSEBInternetGateway

  AWSEBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AWSEBVPC
      Tags:
        - Key: Name
          Value: !Sub ${AWSEBEnvironmentName}-rt

  AWSEBRoute:
    Type: AWS::EC2::Route
    DependsOn: AWSEBInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref AWSEBRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref AWSEBInternetGateway

  AWSEBSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AWSEBSubnet1
      RouteTableId: !Ref AWSEBRouteTable

  AWSEBSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AWSEBSubnet2
      RouteTableId: !Ref AWSEBRouteTable

Outputs:
  ServiceRoleArn:
    Description: ARN of the Elastic Beanstalk service role
    Value: !GetAtt AWSEBServiceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-ServiceRoleArn

  InstanceProfileArn:
    Description: ARN of the EC2 instance profile
    Value: !GetAtt AWSEBInstanceProfile.Arn
    Export:
      Name: !Sub ${AWS::StackName}-InstanceProfileArn 